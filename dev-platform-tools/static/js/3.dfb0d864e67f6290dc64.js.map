{"version":3,"sources":["webpack:///src/views/data-manage/data-source-manage/data-source-list.vue","webpack:///./src/views/data-manage/data-source-manage/data-source-list.vue?5f87","webpack:///./src/views/data-manage/data-source-manage/data-source-list.vue","webpack:///./node_modules/babel-runtime/helpers/classCallCheck.js","webpack:///./src/utils/res-format.js","webpack:///./node_modules/babel-runtime/helpers/createClass.js"],"names":["data_source_list","mixins","mixin","data","_this","this","TLoading","TEdit","show","title","editTypes","label","property","tableTitle","prop","tableData","TPage","total","index","size","FDVisible","FDTitle","FDForm","FDFoot","button","type","cb","form","dialogActiveItem","DSMCAdd","DSMCUpdate","inputVal","clickObj","methods","editBtnCb","editItem","tid","row","_this2","text","api","DSMCDel","id","then","res","res_format","msg","state","DSMCList","close","showDialog","_ref","_this3","_ref$initDig","initDig","undefined","name","width","key","defaultModel","placeholder","option","clearable","showPassword","autosize","min","max","_PublicDataBaseList","Res","init","arr","length","forEach","item","push","value","code","$set","stringify_default","_loop","hasOwnProperty","changePage","_ref2","pageSize","currentPage","lickCell","_ref3","column","databaseName","datasourceName","datasourceType","ip","password","port","remark","username","clickRow","_ref4","_this4","req","current","fieldKey","titleKey","_Res$formatData","formatData","_this5","_this6","mounted","data_source_manage_data_source_list","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","on","click","$event","_v","model","callback","$$v","expression","TTitle","TData","TIsShowPage","TTotal","TCurrentPage","TPageSize","clickCell","FDWidth","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","exports","__esModule","default","instance","Constructor","TypeError","ResDatas","_ref$res","_ref$code","_ref$msg","_ref$error","error","_ref$fieldKey","_ref$titleKey","load","arguments","vm","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default","serverError","JSON","parse","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default","Number","Message","showClose","message","formatDatas","resData","Array","isArray","reskey","obj","_defineProperty","_defineProperty2","defineProperties","target","props","i","descriptor","enumerable","configurable","writable","protoProps","staticProps","prototype"],"mappings":"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","file":"../static/js/3.dfb0d864e67f6290dc64.js","sourcesContent":["<!--\r\n * @Author: Marlon\r\n * @Date: 2020-02-21 10:56:47\r\n * @LastEditors: Marlon\r\n * @LastEditTime: 2020-02-24 15:27:01\r\n * @Description: 数据管理-数据源管理-数据源列表\r\n -->\r\n<template>\r\n  <div class=\"data-source-list\">\r\n    <div class=\"data-source-list-edit-area\">\r\n      <ul class=\"data-source-list-edit-area-btn\">\r\n        <li>\r\n          <el-button type=\"primary\" size=\"small\" @click=\"showDialog({type:'新增'})\">新增</el-button>\r\n        </li>\r\n      </ul>\r\n      <ul class=\"data-source-list-edit-area-select\">\r\n        <li>\r\n          <el-input placeholder=\"请输入表名/中文名\" v-model=\"inputVal\" clearable size=\"small\"></el-input>\r\n        </li>\r\n        <li>\r\n          <el-button type=\"primary\" size=\"small\" @click=\"DSMCList\">搜索</el-button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"data-source-list-table\">\r\n      <TableDefault\r\n        :TLoading=\"TLoading\"\r\n        :TTitle=\"tableTitle\"\r\n        :TData=\"tableData\"\r\n        :TIsShowPage=\"true\"\r\n        :TTotal=\"TPage.total\"\r\n        :TCurrentPage=\"TPage.index\"\r\n        :TPageSize=\"TPage.size\"\r\n        :TEdit=\"TEdit\"\r\n        @editBtnCb=\"editBtnCb\"\r\n        @clickCell=\"lickCell\"\r\n        @clickRow=\"clickRow\"\r\n        @changePage=\"changePage\"\r\n      ></TableDefault>\r\n    </div>\r\n    <!-- 弹出框 -->\r\n    <FormDialog\r\n      :FDVisible=\"FDVisible\"\r\n      :FDTitle=\"FDTitle\"\r\n      FDWidth=\"500\"\r\n      :FDForm=\"FDForm\"\r\n      :FDFoot=\"FDFoot\"\r\n      @editBtnCb=\"editBtnCb\"\r\n    ></FormDialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport mixin from \"mixin\";\r\nimport API from \"api/index\";\r\nimport { ResDatas } from \"utils/res-format\";\r\nexport default {\r\n  mixins: [mixin],\r\n  data() {\r\n    return {\r\n      // 编辑-表格配置\r\n      TLoading: false,\r\n      TEdit: {\r\n        show: true,\r\n        title: \"操作\",\r\n        editTypes: [\r\n          {\r\n            label: \"编辑\",\r\n            property: \"edit\"\r\n          },\r\n          {\r\n            label: \"删除\",\r\n            property: \"del\"\r\n          }\r\n        ]\r\n      },\r\n      tableTitle: [\r\n        {\r\n          prop: \"datasourceName\",\r\n          label: \"名称\"\r\n        },\r\n        {\r\n          prop: \"datasourceType_value\",\r\n          label: \"数据库类型\"\r\n        },\r\n        {\r\n          prop: \"remark\",\r\n          label: \"备注\"\r\n        }\r\n      ],\r\n      tableData: [],\r\n      TPage: {\r\n        total: 100,\r\n        index: 1,\r\n        size: 10\r\n      },\r\n      // 是否显示弹出框\r\n      FDVisible: false,\r\n      FDTitle: \"\",\r\n      // 弹出框配置\r\n      FDForm: [],\r\n      FDFoot: {\r\n        button: [\r\n          {\r\n            type: \"ok\",\r\n            label: \"确定\",\r\n            cb: form => {\r\n              if (this.dialogActiveItem === \"新增\") {\r\n                this.DSMCAdd(form);\r\n              } else {\r\n                this.DSMCUpdate(form);\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      // 输入要查询的值\r\n      inputVal: \"\",\r\n      // 获取点击值的信息\r\n      clickObj: \"\",\r\n      // 获取对应行为的弹出框\r\n      dialogActiveItem: \"\"\r\n    };\r\n  },\r\n  methods: {\r\n    // 初始化抽象列中元素的信息并执行删除操作(弹出框关闭时的回调)\r\n    editBtnCb(editItem, tid, row) {\r\n      this.clickObj = editItem;\r\n      let text = editItem.label;\r\n      if (text === \"删除\") {\r\n        API.DSMCDel({ id: row.id }).then(res => {\r\n          new ResDatas({ res, msg: \"删除成功!\" }).state();\r\n          this.DSMCList();\r\n        });\r\n      } else if (text === \"关闭\") {\r\n        this.FDVisible = editItem.close;\r\n      }\r\n    },\r\n    // 显示弹出框并修改配置\r\n    showDialog({ type, initDig = null }) {\r\n      this.dialogActiveItem = type;\r\n      switch (type) {\r\n        case \"新增\":\r\n          this.FDTitle = \"新增数据源\";\r\n          this.FDVisible = true;\r\n          this.FDForm = [\r\n            {\r\n              type: \"select\",\r\n              label: {\r\n                name: \"数据库类型\",\r\n                width: \"120\"\r\n              },\r\n              key: \"datasourceType\",\r\n              width: \"200\",\r\n              defaultModel: \"\",\r\n              placeholder: \"\",\r\n              option: []\r\n            },\r\n            {\r\n              type: \"input\",\r\n              label: {\r\n                name: \"名称\",\r\n                width: \"120\"\r\n              },\r\n              key: \"datasourceName\",\r\n              clearable: true,\r\n              width: \"280\",\r\n              defaultModel: \"\",\r\n              placeholder: \"\"\r\n            },\r\n            {\r\n              type: \"input\",\r\n              label: {\r\n                name: \"IP\",\r\n                width: \"120\"\r\n              },\r\n              key: \"ip\",\r\n              width: \"280\",\r\n              defaultModel: \"\",\r\n              placeholder: \"\"\r\n            },\r\n            {\r\n              type: \"input\",\r\n              label: {\r\n                name: \"端口\",\r\n                width: \"120\"\r\n              },\r\n              key: \"port\",\r\n              width: \"280\",\r\n              defaultModel: \"\",\r\n              placeholder: \"\"\r\n            },\r\n            {\r\n              type: \"input\",\r\n              label: {\r\n                name: \"用户名\",\r\n                width: \"120\"\r\n              },\r\n              key: \"username\",\r\n              width: \"280\",\r\n              defaultModel: \"\",\r\n              placeholder: \"\"\r\n            },\r\n            {\r\n              type: \"input\",\r\n              label: {\r\n                name: \"密码\",\r\n                width: \"120\"\r\n              },\r\n              showPassword: true,\r\n              key: \"password\",\r\n              width: \"280\",\r\n              defaultModel: \"\",\r\n              placeholder: \"\"\r\n            },\r\n            {\r\n              type: \"input\",\r\n              label: {\r\n                name: \"数据库名称\",\r\n                width: \"120\"\r\n              },\r\n              key: \"databaseName\",\r\n              width: \"280\",\r\n              defaultModel: \"\",\r\n              placeholder: \"\"\r\n            },\r\n            {\r\n              type: \"textarea\",\r\n              label: {\r\n                name: \"备注\",\r\n                width: \"120\"\r\n              },\r\n              key: \"remark\",\r\n              width: \"280\",\r\n              defaultModel: \"\",\r\n              placeholder: \"\",\r\n              autosize: {\r\n                min: 2,\r\n                max: 4\r\n              }\r\n            }\r\n          ];\r\n          API._PublicDataBaseList({ name: \"datasource_datasource_type\" }).then(\r\n            res => {\r\n              let Res = new ResDatas({ res }).init();\r\n              let arr = [];\r\n              if (Res && Res.length) {\r\n                Res.forEach(item => {\r\n                  arr.push({\r\n                    label: item.name,\r\n                    value: item.code\r\n                  });\r\n                });\r\n              }\r\n              this.$set(this.FDForm[0], `option`, arr);\r\n              this.$set(this.FDForm[0], `defaultModel`, arr[0].value);\r\n            }\r\n          );\r\n          return;\r\n        case \"编辑\":\r\n          this.FDTitle = \"编辑数据源\";\r\n          this.FDVisible = true;\r\n          this.FDForm = [\r\n            {\r\n              type: \"select\",\r\n              label: {\r\n                name: \"数据库类型\",\r\n                width: \"120\"\r\n              },\r\n              key: \"datasourceType\",\r\n              width: \"200\",\r\n              defaultModel: \"\",\r\n              placeholder: \"\",\r\n              option: []\r\n            },\r\n            {\r\n              type: \"input\",\r\n              label: {\r\n                name: \"名称\",\r\n                width: \"120\"\r\n              },\r\n              key: \"datasourceName\",\r\n              clearable: true,\r\n              width: \"280\",\r\n              defaultModel: \"\",\r\n              placeholder: \"\"\r\n            },\r\n            {\r\n              type: \"input\",\r\n              label: {\r\n                name: \"IP\",\r\n                width: \"120\"\r\n              },\r\n              key: \"ip\",\r\n              width: \"280\",\r\n              defaultModel: \"\",\r\n              placeholder: \"\"\r\n            },\r\n            {\r\n              type: \"input\",\r\n              label: {\r\n                name: \"端口\",\r\n                width: \"120\"\r\n              },\r\n              key: \"port\",\r\n              width: \"280\",\r\n              defaultModel: \"\",\r\n              placeholder: \"\"\r\n            },\r\n            {\r\n              type: \"input\",\r\n              label: {\r\n                name: \"用户名\",\r\n                width: \"120\"\r\n              },\r\n              key: \"username\",\r\n              width: \"280\",\r\n              defaultModel: \"\",\r\n              placeholder: \"\"\r\n            },\r\n            {\r\n              type: \"input\",\r\n              label: {\r\n                name: \"密码\",\r\n                width: \"120\"\r\n              },\r\n              showPassword: true,\r\n              key: \"password\",\r\n              width: \"280\",\r\n              defaultModel: \"\",\r\n              placeholder: \"\"\r\n            },\r\n            {\r\n              type: \"input\",\r\n              label: {\r\n                name: \"数据库名称\",\r\n                width: \"120\"\r\n              },\r\n              key: \"databaseName\",\r\n              width: \"280\",\r\n              defaultModel: \"\",\r\n              placeholder: \"\"\r\n            },\r\n            {\r\n              type: \"textarea\",\r\n              label: {\r\n                name: \"备注\",\r\n                width: \"120\"\r\n              },\r\n              key: \"remark\",\r\n              width: \"280\",\r\n              defaultModel: \"\",\r\n              placeholder: \"\",\r\n              autosize: {\r\n                min: 2,\r\n                max: 4\r\n              }\r\n            }\r\n          ];\r\n          if (initDig && JSON.stringify(initDig) !== \"{}\") {\r\n            for (const key in initDig) {\r\n              if (initDig.hasOwnProperty(key)) {\r\n                // TODO 优化\r\n                this.FDForm.forEach(item => {\r\n                  if (key === item.key) {\r\n                    item[\"key\"] = key;\r\n                    item[\"defaultModel\"] = initDig[key];\r\n                  }\r\n                });\r\n              }\r\n            }\r\n          }\r\n          API._PublicDataBaseList({ name: \"datasource_datasource_type\" }).then(\r\n            res => {\r\n              let Res = new ResDatas({ res }).init();\r\n              let arr = [];\r\n              if (Res && Res.length) {\r\n                Res.forEach(item => {\r\n                  arr.push({\r\n                    label: item.name,\r\n                    value: item.code\r\n                  });\r\n                });\r\n              }\r\n              this.$set(this.FDForm[0], `option`, arr);\r\n            }\r\n          );\r\n          return;\r\n        default:\r\n          return;\r\n      }\r\n    },\r\n    // 分页操作\r\n    changePage({ pageSize, currentPage }) {\r\n      this.$set(this.TPage, `index`, currentPage);\r\n      this.$set(this.TPage, `size`, pageSize);\r\n      this.DSMCList();\r\n    },\r\n    lickCell({ row, column, id }) {\r\n      const {\r\n        databaseName,\r\n        datasourceName,\r\n        datasourceType,\r\n        ip,\r\n        password,\r\n        port,\r\n        remark,\r\n        username\r\n      } = row;\r\n      switch (column.label) {\r\n        case \"编辑\":\r\n          this.showDialog({\r\n            type: column.label,\r\n            initDig: {\r\n              databaseName,\r\n              datasourceName,\r\n              datasourceType,\r\n              ip,\r\n              password,\r\n              port,\r\n              remark,\r\n              username\r\n            }\r\n          });\r\n          return;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    },\r\n    clickRow({ row, column, id }) {\r\n      console.log(row, column, id);\r\n    },\r\n\r\n    /* 请求 */\r\n    // 查询数据源列表\r\n    DSMCList() {\r\n      let req = null;\r\n      if (this.inputVal) {\r\n        req = {\r\n          current: this.TPage.index,\r\n          size: this.TPage.size,\r\n          datasourceName: this.inputVal\r\n        };\r\n      } else {\r\n        req = {\r\n          current: this.TPage.index,\r\n          size: this.TPage.size\r\n        };\r\n      }\r\n      this.TLoading = true;\r\n      API.DSMCList(req).then(res => {\r\n        let Res = new ResDatas(\r\n          {\r\n            res,\r\n            fieldKey: {\r\n              data: \"records\",\r\n              title: \"\",\r\n              total: \"total\",\r\n              pageSize: \"size\"\r\n            },\r\n            titleKey: this.tableTitle\r\n          },\r\n          \"TLoading\",\r\n          this\r\n        );\r\n        if (Res.init()) {\r\n          const { data, total } = Res.formatData();\r\n          this.tableData = data;\r\n          this.$set(this.TPage, `total`, total);\r\n        }\r\n      });\r\n    },\r\n    // 新增数据源\r\n    DSMCAdd(req) {\r\n      const {\r\n        databaseName,\r\n        datasourceName,\r\n        datasourceType,\r\n        ip,\r\n        password,\r\n        port,\r\n        remark,\r\n        username\r\n      } = req;\r\n      API.DSMCAdd({\r\n        databaseName,\r\n        datasourceName,\r\n        datasourceType,\r\n        ip,\r\n        password,\r\n        port,\r\n        remark,\r\n        username\r\n      }).then(res => {\r\n        new ResDatas({ res, msg: \"添加成功!\" }).state();\r\n        this.FDVisible = false;\r\n        this.DSMCList();\r\n      });\r\n    },\r\n    // 修改数据源\r\n    DSMCUpdate(req) {\r\n      const {\r\n        databaseName,\r\n        datasourceName,\r\n        datasourceType,\r\n        ip,\r\n        password,\r\n        port,\r\n        remark,\r\n        username\r\n      } = req;\r\n      API.DSMCUpdate(req).then(res => {\r\n        new ResDatas({ res, msg: \"修改成功!\" }).state();\r\n        this.FDVisible = false;\r\n        this.DSMCList();\r\n      });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.DSMCList();\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.data-source-list {\r\n  &-edit-area {\r\n    overflow: hidden;\r\n    &-btn {\r\n      float: left;\r\n      overflow: hidden;\r\n      li {\r\n        float: left;\r\n        margin: 2px 15px;\r\n      }\r\n    }\r\n    &-select {\r\n      float: left;\r\n      overflow: hidden;\r\n      margin: 4px 55px;\r\n      li {\r\n        float: left;\r\n        margin-right: 20px;\r\n        &:last-child {\r\n          margin-right: 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  &-table {\r\n    margin: 20px 0;\r\n  }\r\n}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/views/data-manage/data-source-manage/data-source-list.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"data-source-list\"},[_c('div',{staticClass:\"data-source-list-edit-area\"},[_c('ul',{staticClass:\"data-source-list-edit-area-btn\"},[_c('li',[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.showDialog({type:'新增'})}}},[_vm._v(\"新增\")])],1)]),_vm._v(\" \"),_c('ul',{staticClass:\"data-source-list-edit-area-select\"},[_c('li',[_c('el-input',{attrs:{\"placeholder\":\"请输入表名/中文名\",\"clearable\":\"\",\"size\":\"small\"},model:{value:(_vm.inputVal),callback:function ($$v) {_vm.inputVal=$$v},expression:\"inputVal\"}})],1),_vm._v(\" \"),_c('li',[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":_vm.DSMCList}},[_vm._v(\"搜索\")])],1)])]),_vm._v(\" \"),_c('div',{staticClass:\"data-source-list-table\"},[_c('TableDefault',{attrs:{\"TLoading\":_vm.TLoading,\"TTitle\":_vm.tableTitle,\"TData\":_vm.tableData,\"TIsShowPage\":true,\"TTotal\":_vm.TPage.total,\"TCurrentPage\":_vm.TPage.index,\"TPageSize\":_vm.TPage.size,\"TEdit\":_vm.TEdit},on:{\"editBtnCb\":_vm.editBtnCb,\"clickCell\":_vm.lickCell,\"clickRow\":_vm.clickRow,\"changePage\":_vm.changePage}})],1),_vm._v(\" \"),_c('FormDialog',{attrs:{\"FDVisible\":_vm.FDVisible,\"FDTitle\":_vm.FDTitle,\"FDWidth\":\"500\",\"FDForm\":_vm.FDForm,\"FDFoot\":_vm.FDFoot},on:{\"editBtnCb\":_vm.editBtnCb}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3ae08219\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/data-manage/data-source-manage/data-source-list.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3ae08219\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./data-source-list.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./data-source-list.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./data-source-list.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3ae08219\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./data-source-list.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-3ae08219\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/data-manage/data-source-manage/data-source-list.vue\n// module id = null\n// module chunks = ","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/helpers/classCallCheck.js\n// module id = Zrlr\n// module chunks = 3 4","/*\r\n * @Author: Marlon\r\n * @Date: 2020-02-21 11:40:57\r\n * @LastEditors: Marlon\r\n * @LastEditTime: 2020-02-24 11:55:48\r\n * @Description: 响应解析\r\n */\r\nimport { Message } from \"element-ui\";\r\n/* \r\n  响应处理类\r\n*/\r\nclass ResDatas {\r\n    constructor({ res = null, code = 200, msg = '成功!', error = '暂无数据',\r\n        fieldKey = {\r\n            data: 'data',\r\n            title: 'title',\r\n            total: 'total',\r\n            pageSize: 'pageSize'\r\n        },\r\n        titleKey = null\r\n    }, load = null, vm = null) {\r\n        this.res = res;\r\n        this.code = code;\r\n        this.vm = vm;\r\n        this.load = load;\r\n        this.msg = msg;\r\n        this.error = error;\r\n        this.serverError = '服务异常';\r\n        this.fieldKey = fieldKey\r\n        this.titleKey = JSON.parse(JSON.stringify(titleKey))\r\n    }\r\n    init() {\r\n        if (this.vm && this.load) {\r\n            this.vm[this.load] = false;\r\n        }\r\n        try {\r\n            if (this.res && this.res.data && Number(this.res.data.code) === Number(this.code)) {\r\n                let resData = this.res.data.data;\r\n                return resData;\r\n            } else {\r\n                Message({\r\n                    showClose: true,\r\n                    message: this.error,\r\n                    type: \"error\"\r\n                });\r\n                return null\r\n            }\r\n        } catch (error) {\r\n            Message({\r\n                showClose: true,\r\n                message: this.serverError,\r\n                type: \"error\"\r\n            });\r\n            console.error(error, '服务异常——响应解析类')\r\n            return null\r\n        }\r\n    }\r\n    state() {\r\n        try {\r\n            if (this.res && this.res.data && Number(this.res.data.code) === Number(this.code)) {\r\n                Message({\r\n                    showClose: true,\r\n                    message: this.msg,\r\n                    type: \"success\"\r\n                });\r\n            } else {\r\n                Message({\r\n                    showClose: true,\r\n                    message: this.error,\r\n                    type: \"error\"\r\n                });\r\n            }\r\n        } catch (error) {\r\n            Message({\r\n                showClose: true,\r\n                message: this.serverError,\r\n                type: \"error\"\r\n            });\r\n            console.error(error, '服务异常——响应解析类')\r\n        }\r\n    }\r\n    formatData() {\r\n        let formatDatas = {};\r\n        for (const key in this.fieldKey) {\r\n            if (this.fieldKey.hasOwnProperty(key)) {\r\n                if (this.fieldKey[key]) {\r\n                    let resData = this.res.data.data;\r\n                    if (resData && JSON.stringify(resData) !== \"{}\") {\r\n                        if (!Array.isArray(resData)) {\r\n                            for (const reskey in resData) {\r\n                                if (resData.hasOwnProperty(reskey)) {\r\n                                    if (this.fieldKey[key] === reskey) {\r\n                                        formatDatas[key] = resData[reskey];\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else {\r\n                            console.error(\"数据类型错误(对象结构)—响应解析类\");\r\n                        }\r\n                    }\r\n                } else if (this.titleKey) {\r\n                    formatDatas['title'] = this.titleKey\r\n                } else {\r\n                    console.error('请配置表头(titleKey)', '响应解析类')\r\n                }\r\n            }\r\n        }\r\n        return formatDatas\r\n    }\r\n}\r\nexport { ResDatas }\n\n\n// WEBPACK FOOTER //\n// ./src/utils/res-format.js","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/helpers/createClass.js\n// module id = wxAW\n// module chunks = 3 4"],"sourceRoot":""}